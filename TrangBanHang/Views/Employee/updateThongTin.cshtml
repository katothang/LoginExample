@model TrangBanHang.Models.Employee

@{
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Đăng nhập hệ thống</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <style type="text/css">
        body {
            color: #fff;
            background: #3598dc;
        }

        .form-control {
            min-height: 41px;
            background: #f2f2f2;
            box-shadow: none !important;
            border: transparent;
        }

            .form-control:focus {
                background: #e2e2e2;
            }

        .form-control, .btn {
            border-radius: 2px;
        }

        .login-form {
            width: 350px;
            margin: 30px auto;
            text-align: center;
        }

            .login-form h2 {
                margin: 10px 0 25px;
            }

            .login-form form {
                color: #7a7a7a;
                border-radius: 3px;
                margin-bottom: 15px;
                background: #fff;
                box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
                padding: 30px;
            }

            .login-form .btn {
                font-size: 16px;
                font-weight: bold;
                background: #3598dc;
                border: none;
                outline: none !important;
            }

                .login-form .btn:hover, .login-form .btn:focus {
                    background: #2389cd;
                }

            .login-form a {
                color: #fff;
                text-decoration: underline;
            }

                .login-form a:hover {
                    text-decoration: none;
                }

            .login-form form a {
                color: #7a7a7a;
                text-decoration: none;
            }

                .login-form form a:hover {
                    text-decoration: underline;
                }
    </style>
</head>
<body>
    <div class="login-form">
        <form action="/Employee/updateThongTin" method="post" enctype="multipart/form-data" >
            <h2 class="text-center">Update thông tin</h2>
            <div class="form-group">
                <div class="form-group">
                    <label>Họ tên</label>
                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", @type = "text", @required = "required" })
                    @*<input class="form-control" name="FullName" required>*@
                </div>

                <label>Mật Khẩu</label>
                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "Password", @required = "required" })
                @*<input class="form-control" name="Password" required>*@
            </div>


            <div class="form-group">
                <label>Email</label>
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "text", @required = "required" })
                @*<input class="form-control" name="Email" required>*@
            </div>

            <div class="form-group">
                <label>Phone</label>
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @type = "text", @required = "required" })
                @*<input class="form-control" name="Phone" required>*@
            </div>

            <div class="form-group">
                <label>Address</label>
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @type = "text", @required = "required" })
                @*<input class="form-control" name="Address" required>*@
            </div>
            <div class="form-group">
                <label>BankAccount</label>
                @Html.TextBoxFor(model => model.BankAccount, new { @class = "form-control", @type = "text", @required = "required" })
                @*<input class="form-control" name="BankAccount" required>*@
            </div>
            <div class="form-group">
                <label>Ngày sinh</label>
                @Html.TextBoxFor(model => model.Birthday, new { @class = "form-control", @type = "date", @required = "required" })
                @*<input class="form-control" name="Birthday" required>*@
            </div>

            <div class="form-group">
                <label>Avata </label>
                <div class="thumbnail" id="photocard"><img src="http://placehold.it/242x200"></img></div>
                @Html.TextBoxFor(model => model.ImageFile, new { @class = "form-control", @type = "file", @required = "required",@onchange = "uploadImageHelper.uploadFile(this.files);"})
                @*<input id="file" multiple accept="image/*" name="ImageFile" onchange="uploadImageHelper.uploadFile(this.files)" style="display: none;" type="file" classs = "btn btn-primary btn-file"></input>*@
            </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary btn-lg btn-block">Update thông tin</button>
    </div>
    <p>
        @if (@ViewBag.SuccessMessage != null)
        {
            @ViewBag.SuccessMessage
        }
    </p>

    </div>



    </form>

    </div>

    <script>
        var uploadImageHelper = (function () {
    var selectedFile;
    var cardsPlaceHolder;
    return {
        fileSelection: function () {
            var selectedfile = $('#file')[0].files[0];
            selectedFile = selectedfile;
            document.getElementById("filefield").value = selectedfile.name;

        },
        uploadFile: function (file) {
            var photoPlace = document.getElementById("photocard");
            if (!file.length) {
                photoPlace.innerHTML = "<p>No files selected!</p>";
            } else {
                selectedFile = file;
                photoPlace.innerHTML = "";
                for (var i = 0; i < file.length; i++) {
                    var img = document.createElement("img");
                    img.src = window.URL.createObjectURL(file[i]);
                    img.height = 200;
                    img.weight = 150;
                    img.onload = function () {
                        window.URL.revokeObjectURL(this.src);
                    }
                    photoPlace.appendChild(img);
                    var fileName = document.createElement("p");
                    fileName.innerHTML = file[i].name;
                    var fileSize = document.createElement("p");
                    fileSize.innerHTML = file[i].size;
                    photoPlace.appendChild(fileName);
                    photoPlace.appendChild(fileSize);
                }
            }
        },
        uploadFiles: function (files) {
            cardsPlaceHolder = document.getElementById("cardPlaceHolder");
            if (!files.length) {
                cardsPlaceHolder.innerHTML = "<p>No files selected!</p>";
            } else {
                cardsPlaceHolder.innerHTML = "";
                var list = document.createElement("ul");
                list.className = "list-inline";
                cardsPlaceHolder.appendChild(list);
                for (var i = 0; i < files.length; i++) {

                    var li = document.createElement("li");
                    list.appendChild(li);

                    var thumbnailDiv = document.createElement("div");
                    thumbnailDiv.className = "thumbnail";
                    thumbnailDiv.id = i;

                    var img = document.createElement("img");
                    img.src = window.URL.createObjectURL(files[i]);
                    img.height = 100;
                    img.onload = function () {
                        window.URL.revokeObjectURL(this.src);
                    }

                    var infoDiv = document.createElement("div");
                    infoDiv.className = "caption";
                    var fileName = document.createElement("p");
                    fileName.innerHTML = "Name: " + files[i].name;
                    var fileSize = document.createElement("p");
                    fileSize.innerHTML = "File size: " + files[i].size;
                    infoDiv.appendChild(fileName);
                    infoDiv.appendChild(fileSize);

                    thumbnailDiv.appendChild(img);
                    thumbnailDiv.appendChild(infoDiv);
                    li.appendChild(thumbnailDiv);
                }
            }
        },
        getFileName: function () {
            return selectedFile.name;
        },

        getFileSize: function () {
            return selectedFile.size;
        },
        getFileExtension: function () {

        }
    }
})();
    </script>
</body>
</html>
